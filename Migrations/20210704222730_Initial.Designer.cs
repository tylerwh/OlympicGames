// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicGames.Models;

namespace OlympicGames.Migrations
{
    [DbContext(typeof(TeamContext))]
    [Migration("20210704222730_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OlympicGames.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Indoor"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Outdoor"
                        });
                });

            modelBuilder.Entity("OlympicGames.Models.Game", b =>
                {
                    b.Property<int>("GameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameID = 1,
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            GameID = 2,
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            GameID = 3,
                            Name = "Paralympic Games"
                        },
                        new
                        {
                            GameID = 4,
                            Name = "Youth Olympics"
                        });
                });

            modelBuilder.Entity("OlympicGames.Models.Team", b =>
                {
                    b.Property<string>("TeamID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("FlagImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("GameID");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamID = "aus",
                            CategoryID = 2,
                            FlagImage = "AUS.png",
                            GameID = 3,
                            Name = "Austria"
                        },
                        new
                        {
                            TeamID = "brz",
                            CategoryID = 2,
                            FlagImage = "BRZ.gif",
                            GameID = 1,
                            Name = "Brazil"
                        },
                        new
                        {
                            TeamID = "can",
                            CategoryID = 1,
                            FlagImage = "CAN.png",
                            GameID = 2,
                            Name = "Canada"
                        },
                        new
                        {
                            TeamID = "chn",
                            CategoryID = 1,
                            FlagImage = "CHN.gif",
                            GameID = 1,
                            Name = "China"
                        },
                        new
                        {
                            TeamID = "cyp",
                            CategoryID = 1,
                            FlagImage = "CYP.gif",
                            GameID = 4,
                            Name = "Cyprus"
                        },
                        new
                        {
                            TeamID = "fin",
                            CategoryID = 2,
                            FlagImage = "FIN.jpg",
                            GameID = 4,
                            Name = "Finland"
                        },
                        new
                        {
                            TeamID = "fra",
                            CategoryID = 1,
                            FlagImage = "FRA.gif",
                            GameID = 4,
                            Name = "France"
                        },
                        new
                        {
                            TeamID = "ger",
                            CategoryID = 1,
                            FlagImage = "GER.gif",
                            GameID = 1,
                            Name = "Germany"
                        },
                        new
                        {
                            TeamID = "gbr",
                            CategoryID = 1,
                            FlagImage = "GBR.jpg",
                            GameID = 2,
                            Name = "Great Britain"
                        },
                        new
                        {
                            TeamID = "ita",
                            CategoryID = 2,
                            FlagImage = "ITA.gif",
                            GameID = 2,
                            Name = "Italy"
                        },
                        new
                        {
                            TeamID = "jam",
                            CategoryID = 2,
                            FlagImage = "JAM.gif",
                            GameID = 2,
                            Name = "Jamaica"
                        },
                        new
                        {
                            TeamID = "jap",
                            CategoryID = 2,
                            FlagImage = "JAP.gif",
                            GameID = 2,
                            Name = "Japan"
                        },
                        new
                        {
                            TeamID = "mex",
                            CategoryID = 1,
                            FlagImage = "MEX.png",
                            GameID = 1,
                            Name = "Mexico"
                        },
                        new
                        {
                            TeamID = "net",
                            CategoryID = 2,
                            FlagImage = "NET.png",
                            GameID = 1,
                            Name = "Netherlands"
                        },
                        new
                        {
                            TeamID = "pak",
                            CategoryID = 2,
                            FlagImage = "PAK.png",
                            GameID = 3,
                            Name = "Pakistan"
                        },
                        new
                        {
                            TeamID = "por",
                            CategoryID = 2,
                            FlagImage = "POR.png",
                            GameID = 4,
                            Name = "Portugal"
                        },
                        new
                        {
                            TeamID = "rus",
                            CategoryID = 1,
                            FlagImage = "RUS.png",
                            GameID = 4,
                            Name = "Russia"
                        },
                        new
                        {
                            TeamID = "slo",
                            CategoryID = 2,
                            FlagImage = "SLO.jpg",
                            GameID = 4,
                            Name = "Slovakia"
                        },
                        new
                        {
                            TeamID = "swe",
                            CategoryID = 1,
                            FlagImage = "SWE.jpg",
                            GameID = 2,
                            Name = "Sweden"
                        },
                        new
                        {
                            TeamID = "thi",
                            CategoryID = 1,
                            FlagImage = "THI.png",
                            GameID = 3,
                            Name = "Thailand"
                        },
                        new
                        {
                            TeamID = "ukr",
                            CategoryID = 1,
                            FlagImage = "UKR.jpg",
                            GameID = 3,
                            Name = "Ukraine"
                        },
                        new
                        {
                            TeamID = "uru",
                            CategoryID = 1,
                            FlagImage = "URU.png",
                            GameID = 3,
                            Name = "Uruguay"
                        },
                        new
                        {
                            TeamID = "usa",
                            CategoryID = 2,
                            FlagImage = "USA.png",
                            GameID = 1,
                            Name = "USA"
                        },
                        new
                        {
                            TeamID = "zim",
                            CategoryID = 2,
                            FlagImage = "ZIM.gif",
                            GameID = 3,
                            Name = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("OlympicGames.Models.Team", b =>
                {
                    b.HasOne("OlympicGames.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("OlympicGames.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID");
                });
#pragma warning restore 612, 618
        }
    }
}
